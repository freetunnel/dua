#!/bin/bash# =========================================clearBIBlack='\033[1;90m'      # BlackBIRed='\033[1;91m'        # RedBIGreen='\033[1;92m'      # GreenBIYellow='\033[1;93m'     # YellowBIBlue='\033[1;94m'       # BlueBIPurple='\033[1;95m'     # PurpleBICyan='\033[1;96m'       # CyanBIWhite='\033[1;97m'      # WhiteUWhite='\033[4;37m'       # WhiteOn_IPurple='\033[0;105m'  #On_IRed='\033[0;101m'IBlack='\033[0;90m'       # BlackIRed='\033[0;91m'         # RedIGreen='\033[0;92m'       # GreenIYellow='\033[0;93m'      # YellowIBlue='\033[0;94m'        # BlueIPurple='\033[0;95m'      # PurpleICyan='\033[0;96m'        # CyanIWhite='\033[0;97m'       # WhiteNC='\e[0m'# // Export Color & Informationexport RED='\033[0;31m'export GREEN='\033[0;32m'export YELLOW='\033[0;33m'export BLUE='\033[0;34m'export PURPLE='\033[0;35m'export CYAN='\033[0;36m'export LIGHT='\033[0;37m'export NC='\033[0m'# // Export Banner Status Informationexport EROR="[${RED} EROR ${NC}]"export INFO="[${YELLOW} INFO ${NC}]"export OKEY="[${GREEN} OKEY ${NC}]"export PENDING="[${YELLOW} PENDING ${NC}]"export SEND="[${YELLOW} SEND ${NC}]"export RECEIVE="[${YELLOW} RECEIVE ${NC}]"# // Export Alignexport BOLD="\e[1m"export WARNING="${RED}\e[5m"export UNDERLINE="\e[4m"export DEBIAN_FRONTEND=noninteractiveMYIP=$(curl -sS ifconfig.me);MYIP2="s/xxxxxxxxx/$MYIP/g";NET=$(ip -o $ANU -4 route show to default | awk '{print $5}');source /etc/os-releasever=$VERSION_ID#detail nama perusahaancountry=IDstate=Indonesialocality=Indonesiaorganization=FTPorganizationalunit=freetunnel commonname=freetunnel email=asu@freetunnel.net# simple password minimalcurl -sS https://raw.githubusercontent.com/freetunnel/satu/main/install/password | openssl aes-256-cbc -d -a -pass pass:scvps07gg -pbkdf2 > /etc/pam.d/common-passwordchmod +x /etc/pam.d/common-password# go to rootcdclear # Getting websocket ssl stunnelwget -q -O /usr/local/bin/ws-stunnel "https://raw.githubusercontent.com/freetunnel/dua/main/ws-stunnel"chmod +x /usr/local/bin/ws-stunnel# Installing Service Ovpn Websocketcat > /etc/systemd/system/ws-stunnel.service << END[Unit]Description=Ovpn Websocket FREETUNNEL Documentation=https://freetunnel.netAfter=network.target nss-lookup.target[Service]Type=simpleUser=rootCapabilityBoundingSet=CAP_NET_ADMIN CAP_NET_BIND_SERVICEAmbientCapabilities=CAP_NET_ADMIN CAP_NET_BIND_SERVICENoNewPrivileges=trueExecStart=/usr/bin/python2 -O /usr/local/bin/ws-stunnelRestart=on-failure[Install]WantedBy=multi-user.targetENDsystemctl daemon-reload >/dev/null 2>&1systemctl enable ws-stunnel >/dev/null 2>&1systemctl start ws-stunnel >/dev/null 2>&1systemctl restart ws-stunnel >/dev/null 2>&1clearcat > /etc/systemd/system/rc-local.service <<-END[Unit]Description=/etc/rc.localConditionPathExists=/etc/rc.local[Service]Type=forkingExecStart=/etc/rc.local startTimeoutSec=0StandardOutput=ttyRemainAfterExit=yesSysVStartPriority=99[Install]WantedBy=multi-user.targetEND# nano /etc/rc.localcat > /etc/rc.local <<-END#!/bin/sh -e# rc.local# By default this script does nothing.exit 0END# Ubah izin akseschmod +x /etc/rc.localecho -e ""dateecho ""# enable rc localsleep 1echo -e "[ ${green}INFO${NC} ] Checking... "sleep 2sleep 1echo -e "[ ${green}INFO$NC ] Enable system rc local"systemctl enable rc-local >/dev/null 2>&1systemctl start rc-local.service >/dev/null 2>&1# disable ipv6sleep 1echo -e "[ ${green}INFO$NC ] Disable ipv6"echo 1 > /proc/sys/net/ipv6/conf/all/disable_ipv6 >/dev/null 2>&1sed -i '$ i\echo 1 > /proc/sys/net/ipv6/conf/all/disable_ipv6' /etc/rc.local >/dev/null 2>&1# set time GMT +7sleep 1echo -e "[ ${green}INFO$NC ] Set zona local time to Asia/Jakarta GMT+7"ln -fs /usr/share/zoneinfo/Asia/Jakarta /etc/localtime# set localesed -i 's/AcceptEnv/#AcceptEnv/g' /etc/ssh/sshd_config# install badvpntesmatch=`screen -list | awk  '{print $1}' | grep -ow "badvpn" | sort | uniq`if [ "$tesmatch" = "badvpn" ]; thensleep 1echo -e "[ ${green}INFO$NC ] Screen badvpn detected"rm /root/screenlog > /dev/null 2>&1    runningscreen=( `screen -list | awk  '{print $1}' | grep -w "badvpn"` ) # sed 's/\.[^ ]*/ /g'    for actv in "${runningscreen[@]}"    do        cek=( `screen -list | awk  '{print $1}' | grep -w "badvpn"` )        if [ "$cek" = "$actv" ]; then        for sama in "${cek[@]}"; do            sleep 1            screen -XS $sama quit > /dev/null 2>&1            echo -e "[ ${red}CLOSE$NC ] Closing screen $sama"        done         fi    doneelseecho -neficdecho -e "[ ${green}INFO$NC ] Installing badvpn for game support..."wget -q -O /usr/bin/badvpn-udpgw "https://raw.githubusercontent.com/freetunnel/dua/main/newudpgw"chmod +x /usr/bin/badvpn-udpgw  >/dev/null 2>&1sed -i '$ i\screen -dmS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7100 --max-clients 500' /etc/rc.local >/dev/null 2>&1sed -i '$ i\screen -dmS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7200 --max-clients 500' /etc/rc.local >/dev/null 2>&1sed -i '$ i\screen -dmS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7300 --max-clients 500' /etc/rc.local >/dev/null 2>&1systemctl daemon-reload >/dev/null 2>&1systemctl start rc-local.service >/dev/null 2>&1systemctl restart rc-local.service >/dev/null 2>&1# /etc/ssh/sshd_configsed -i 's/Port 22/Port 22/g' /etc/ssh/sshd_configsed -i '/Port 22/a Port 2253' /etc/ssh/sshd_configecho "Port 22" >> /etc/ssh/sshd_configecho "Port 40000" >> /etc/ssh/sshd_configecho "X11Forwarding yes" >> /etc/ssh/sshd_configecho "AllowTcpForwarding yes" >> /etc/ssh/sshd_configecho "PermitRootLogin yes" >> /etc/ssh/sshd_configecho "PubkeyAuthentication yes" >> /etc/ssh/sshd_configecho "PasswordAuthentication yes" >> /etc/ssh/sshd_configsed -i 's/#AllowTcpForwarding yes/AllowTcpForwarding yes/g' /etc/ssh/sshd_configsed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_configsystemctl daemon-reload >/dev/null 2>&1systemctl start ssh >/dev/null 2>&1systemctl restart ssh >/dev/null 2>&1# install dropbearsleep 1echo -e "[ ${green}INFO$NC ] Settings Dropbear"sed -i 's/NO_START=1/NO_START=0/g' /etc/default/dropbearsed -i 's/DROPBEAR_PORT=22/DROPBEAR_PORT=143/g' /etc/default/dropbearsed -i 's/DROPBEAR_EXTRA_ARGS=/DROPBEAR_EXTRA_ARGS="-p 109"/g' /etc/default/dropbearsystemctl daemon-reload >/dev/null 2>&1systemctl start dropbear >/dev/null 2>&1systemctl restart dropbear >/dev/null 2>&1cekker=$(cat /etc/shells | grep -w "/bin/false")if [[ "$cekker" = "/bin/false" ]];thenecho -neelseecho "/bin/false" >> /etc/shellsecho "/usr/sbin/nologin" >> /etc/shellsfi# Install Stunnel5cd /root/wget -q "https://raw.githubusercontent.com/freetunnel/dua/main/stunnel5.zip"unzip stunnel5.zipcd /root/stunnelchmod +x configure./configuremakemake installcd /rootrm -r -f stunnelrm -f stunnel5.ziprm -fr /etc/stunnel5mkdir -p /etc/stunnel5chmod 644 /etc/stunnel5# Download Config Stunnel5cat > /etc/stunnel5/stunnel5.conf <<-ENDcert = /etc/xray/xray.crtkey = /etc/xray/xray.keyclient = nosocket = a:SO_REUSEADDR=1socket = l:TCP_NODELAY=1socket = r:TCP_NODELAY=1[dropbear]accept = 447connect = 127.0.0.1:109[openssh]accept = 777connect = 127.0.0.1:22[openvpn]accept = 990connect = 127.0.0.1:1194END# Service Stunnel5 systemctl restart stunnel5rm -fr /etc/systemd/system/stunnel5.servicecat > /etc/systemd/system/stunnel5.service << END[Unit]Description=Stunnel5 ServiceDocumentation=https://stunnel.orgDocumentation=https://nekopoi.careAfter=syslog.target network-online.target[Service]ExecStart=/usr/local/bin/stunnel5 /etc/stunnel5/stunnel5.confType=forking[Install]WantedBy=multi-user.targetEND# Service Stunnel5 /etc/init.d/stunnel5rm -fr /etc/init.d/stunnel5wget -q -O /etc/init.d/stunnel5 "https://raw.githubusercontent.com/freetunnel/dua/main/stunnel5.init"# Ubah Izin Akses#chmod 600 /etc/stunnel5/stunnel5.pemchmod +x /etc/init.d/stunnel5cp -r /usr/local/bin/stunnel /usr/local/bin/stunnel5#mv /usr/local/bin/stunnel /usr/local/bin/stunnel5# Remove Filerm -r -f /usr/local/share/doc/stunnel/rm -r -f /usr/local/etc/stunnel/rm -f /usr/local/bin/stunnelrm -f /usr/local/bin/stunnel3rm -f /usr/local/bin/stunnel4#rm -f /usr/local/bin/stunnel5# Restart Stunnel5systemctl daemon-reload >/dev/null 2>&1systemctl enable stunnel5 >/dev/null 2>&1systemctl start stunnel5 >/dev/null 2>&1systemctl restart stunnel5 >/dev/null 2>&1# Install bbrInstall_BBR(){wget https://raw.githubusercontent.com/freetunnel/satu/main/install/bbr.sh && chmod +x bbr.sh && ./bbr.sh}Install_BBRsleep 1echo -e "[ ${green}INFO$NC ] Install successfully..."# install fail2ban# Instal DDOS Flaterm -fr /usr/local/ddosmkdir -p /usr/local/ddos >/dev/null 2>&1#clearsleep 1echo -e "[ ${green}INFO$NC ] Install DOS-Deflate"sleep 1echo -e "[ ${green}INFO$NC ] Downloading source files..."wget -q -O /usr/local/ddos/ddos.conf http://www.inetbase.com/scripts/ddos/ddos.confwget -q -O /usr/local/ddos/LICENSE http://www.inetbase.com/scripts/ddos/LICENSEwget -q -O /usr/local/ddos/ignore.ip.list http://www.inetbase.com/scripts/ddos/ignore.ip.listwget -q -O /usr/local/ddos/ddos.sh http://www.inetbase.com/scripts/ddos/ddos.shchmod 0755 /usr/local/ddos/ddos.shcp -s /usr/local/ddos/ddos.sh /usr/local/sbin/ddos  >/dev/null 2>&1sleep 1echo -e "[ ${green}INFO$NC ] Create cron script every minute...."/usr/local/ddos/ddos.sh --cron > /dev/null 2>&1sleep 1echo -e "[ ${green}INFO$NC ] Install successfully..."sleep 1echo -e "[ ${green}INFO$NC ] Config file at /usr/local/ddos/ddos.conf"# Banner /etc/issue.netrm -fr /etc/issue.netrm -fr /etc/issue.net.savesleep 1echo -e "[ ${green}INFO$NC ] Settings banner"wget -q -O /etc/issue.net "https://raw.githubusercontent.com/freetunnel/satu/main/issue.net"chmod +x /etc/issue.netecho "Banner /etc/issue.net" >> /etc/ssh/sshd_configsed -i 's@DROPBEAR_BANNER=""@DROPBEAR_BANNER="/etc/issue.net"@g' /etc/default/dropbear# Blokir Torrentecho -e "[ ${green}INFO$NC ] Set iptables"sleep 1sudo iptables -A FORWARD -m string --string "get_peers" --algo bm -j DROPsudo iptables -A FORWARD -m string --string "announce_peer" --algo bm -j DROPsudo iptables -A FORWARD -m string --string "find_node" --algo bm -j DROPsudo iptables -A FORWARD -m string --algo bm --string "BitTorrent" -j DROPsudo iptables -A FORWARD -m string --algo bm --string "BitTorrent protocol" -j DROPsudo iptables -A FORWARD -m string --algo bm --string "peer_id=" -j DROPsudo iptables -A FORWARD -m string --algo bm --string ".torrent" -j DROPsudo iptables -A FORWARD -m string --algo bm --string "announce.php?passkey=" -j DROPsudo iptables -A FORWARD -m string --algo bm --string "torrent" -j DROPsudo iptables -A FORWARD -m string --algo bm --string "announce" -j DROPsudo iptables -A FORWARD -m string --algo bm --string "info_hash" -j DROPsudo iptables-save > /etc/iptables.up.rulessudo iptables-restore -t < /etc/iptables.up.rulessudo netfilter-persistent save >/dev/null 2>&1sudo netfilter-persistent reload >/dev/null 2>&1# remove unnecessary filessleep 1echo -e "[ ${green}INFO$NC ] Clearing trash"apt autoclean -y >/dev/null 2>&1if dpkg -s unscd >/dev/null 2>&1; thenapt -y remove --purge unscd >/dev/null 2>&1ficdecho -e "[ ${green}ok${NC} ] Restarting openvpn"/etc/init.d/cron restart >/dev/null 2>&1sleep 1echo -e "[ ${green}ok${NC} ] Restarting cron"/etc/init.d/ssh restart >/dev/null 2>&1sleep 1echo -e "[ ${green}ok${NC} ] Restarting ssh"/etc/init.d/dropbear restart >/dev/null 2>&1sleep 1echo -e "[ ${green}ok${NC} ] Restarting dropbear"/etc/init.d/fail2ban restart >/dev/null 2>&1sleep 1echo -e "[ ${green}ok${NC} ] Restarting fail2ban"/etc/init.d/stunnel5 restart >/dev/null 2>&1sleep 1echo -e "[ ${green}ok${NC} ] Restarting stunnel5"/etc/init.d/vnstat restart >/dev/null 2>&1sleep 1echo -e "[ ${green}ok${NC} ] Restarting squid "screen -dmS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7100 --max-clients 500 >/dev/null 2>&1screen -dmS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7200 --max-clients 500 >/dev/null 2>&1screen -dmS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7300 --max-clients 500 >/dev/null 2>&1history -cecho "unset HISTFILE" >> /etc/profilecd# download scriptcd /usr/bin#wget -O issue "https://raw.githubusercontent.com/freetunnel/satu/main/install/issue.net"wget -O m-theme "https://raw.githubusercontent.com/freetunnel/satu/main/menu/m-theme.sh"wget -O speedtest "https://raw.githubusercontent.com/freetunnel/satu/main/install/speedtest_cli.py"wget -O xp "https://raw.githubusercontent.com/freetunnel/satu/main/install/xp.sh"#chmod +x issuechmod +x m-themechmod +x speedtestchmod +x xpcd#if [ ! -f "/etc/cron.d/xp_otm" ]; thencat> /etc/cron.d/xp_otm << ENDSHELL=/bin/shPATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin0 0 * * * root /usr/bin/xpEND#fi#if [ ! -f "/etc/cron.d/bckp_otm" ]; thencat> /etc/cron.d/bckp_otm << ENDSHELL=/bin/shPATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin0 5 * * * root /usr/bin/bottelegramEND#fi#if [ ! -f "/etc/cron.d/autocpu" ]; thencat> /etc/cron.d/autocpu << ENDSHELL=/bin/shPATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin*/1 * * * * root /usr/bin/autocpuEND#ficat> /etc/cron.d/tendang << ENDSHELL=/bin/shPATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin*/1 * * * * root /usr/bin/tendangENDcat> /etc/cron.d/xraylimit << ENDSHELL=/bin/shPATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin0*/1 * * * * root /usr/bin/xraylimitENDservice cron restart >/dev/null 2>&1service cron reload >/dev/null 2>&1service cron start >/dev/null 2>&1# remove unnecessary filesapt autoclean -y >/dev/null 2>&1apt -y remove --purge unscd >/dev/null 2>&1apt-get -y --purge remove samba* >/dev/null 2>&1apt-get -y --purge remove apache2* >/dev/null 2>&1apt-get -y --purge remove bind9* >/dev/null 2>&1apt-get -y remove sendmail* >/dev/null 2>&1apt autoremove -y >/dev/null 2>&1# finishingcdchown -R www-data:www-data /home/vps/public_htmlrm -f /root/key.pemrm -f /root/cert.pemrm -f /root/ssh-vpn.shrm -f /root/bbr.shrm -rf /etc/apache2clear